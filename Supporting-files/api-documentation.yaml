openapi: 3.0.0
info:
  title: Class Action Lawsuit Finder API
  description: API for the Class Action Lawsuit Finder web application
  version: 1.0.0
  contact:
    name: Class Action Lawsuit Finder Support
    email: support@classactionfinder.com
    url: https://classactionfinder.com/support
servers:
  - url: https://api.classactionfinder.com/v1
    description: Production server
  - url: https://staging-api.classactionfinder.com/v1
    description: Staging server
  - url: http://localhost:3000/api/v1
    description: Local development server

tags:
  - name: Authentication
    description: User authentication operations
  - name: Lawsuits
    description: Lawsuit management operations
  - name: Claims
    description: Claim management operations
  - name: Users
    description: User management operations
  - name: Search
    description: Search operations
  - name: Notifications
    description: Notification operations
  - name: Analytics
    description: Analytics operations

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate a user and return a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials
        '422':
          description: Validation error

  /auth/register:
    post:
      tags:
        - Authentication
      summary: User registration
      description: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '409':
          description: Email already exists
        '422':
          description: Validation error

  /lawsuits:
    get:
      tags:
        - Lawsuits
      summary: Get all lawsuits
      description: Returns a paginated list of lawsuits
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
            default: 10
        - name: query
          in: query
          description: Search query
          schema:
            type: string
        - name: location
          in: query
          description: Filter by location
          schema:
            type: string
        - name: category
          in: query
          description: Filter by category
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  lawsuits:
                    type: array
                    items:
                      $ref: '#/components/schemas/Lawsuit'
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer
                  hasMore:
                    type: boolean
    post:
      tags:
        - Lawsuits
      summary: Create a new lawsuit
      description: Creates a new lawsuit (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LawsuitInput'
      responses:
        '201':
          description: Lawsuit created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lawsuit'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
        '422':
          description: Validation error

  /lawsuits/{id}:
    get:
      tags:
        - Lawsuits
      summary: Get a lawsuit by ID
      description: Returns a single lawsuit by ID
      parameters:
        - name: id
          in: path
          required: true
          description: Lawsuit ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lawsuit'
        '404':
          description: Lawsuit not found
    put:
      tags:
        - Lawsuits
      summary: Update a lawsuit
      description: Updates an existing lawsuit (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Lawsuit ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LawsuitInput'
      responses:
        '200':
          description: Lawsuit updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lawsuit'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
        '404':
          description: Lawsuit not found
        '422':
          description: Validation error
    delete:
      tags:
        - Lawsuits
      summary: Delete a lawsuit
      description: Deletes a lawsuit (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Lawsuit ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Lawsuit deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required
        '404':
          description: Lawsuit not found

  /lawsuits/{id}/similar:
    get:
      tags:
        - Lawsuits
      summary: Get similar lawsuits
      description: Returns lawsuits similar to the specified lawsuit
      parameters:
        - name: id
          in: path
          required: true
          description: Lawsuit ID
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          description: Number of similar lawsuits to return
          schema:
            type: integer
            default: 3
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lawsuit'
        '404':
          description: Lawsuit not found

  /claims:
    get:
      tags:
        - Claims
      summary: Get user claims
      description: Returns claims for the authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim'
        '401':
          description: Unauthorized
    post:
      tags:
        - Claims
      summary: Submit a claim
      description: Submits a new claim for a lawsuit
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimInput'
      responses:
        '201':
          description: Claim submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
        '401':
          description: Unauthorized
        '422':
          description: Validation error

  /claims/{id}:
    get:
      tags:
        - Claims
      summary: Get a claim by ID
      description: Returns a single claim by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Claim ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Not claim owner
        '404':
          description: Claim not found
    put:
      tags:
        - Claims
      summary: Update a claim
      description: Updates an existing claim
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Claim ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimUpdateInput'
      responses:
        '200':
          description: Claim updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Not claim owner
        '404':
          description: Claim not found
        '422':
          description: Validation error

  /claims/{id}/documents:
    post:
      tags:
        - Claims
      summary: Add document to claim
      description: Adds a document to an existing claim
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Claim ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - document
                - type
              properties:
                document:
                  type: string
                  format: binary
                type:
                  type: string
                  enum: [proof_of_purchase, identity_verification, financial_loss, medical_record]
      responses:
        '200':
          description: Document added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Not claim owner
        '404':
          description: Claim not found
        '422':
          description: Validation error

  /users/me:
    get:
      tags:
        - Users
      summary: Get current user
      description: Returns the authenticated user's profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
    put:
      tags:
        - Users
      summary: Update user profile
      description: Updates the authenticated user's profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateInput'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '422':
          description: Validation error

  /users/me/import:
    post:
      tags:
        - Users
      summary: Import user data
      description: Imports user data from external services
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - service
                - data
              properties:
                service:
                  type: string
                  enum: [amazon, linkedin, facebook]
                data:
                  type: object
      responses:
        '200':
          description: Data imported successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '422':
          description: Validation error

  /search/saved:
    get:
      tags:
        - Search
      summary: Get saved searches
      description: Returns saved searches for the authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SavedSearch'
        '401':
          description: Unauthorized
    post:
      tags:
        - Search
      summary: Save a search
      description: Saves a search for the authenticated user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedSearchInput'
      responses:
        '201':
          description: Search saved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearch'
        '401':
          description: Unauthorized
        '422':
          description: Validation error

  /search/saved/{id}:
    delete:
      tags:
        - Search
      summary: Delete a saved search
      description: Deletes a saved search
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Saved search ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Search deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Not search owner
        '404':
          description: Saved search not found

  /notifications:
    get:
      tags:
        - Notifications
      summary: Get user notifications
      description: Returns notifications for the authenticated user
      security:
        - bearerAuth: []
      parameters:
        - name: includeRead
          in: query
          description: Include read notifications
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
        '401':
          description: Unauthorized

  /notifications/{id}/read:
    put:
      tags:
        - Notifications
      summary: Mark notification as read
      description: Marks a notification as read
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Notification ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Notification marked as read
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Not notification owner
        '404':
          description: Notification not found

  /notifications/read-all:
    put:
      tags:
        - Notifications
      summary: Mark all notifications as read
      description: Marks all notifications as read for the authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: All notifications marked as read
        '401':
          description: Unauthorized

  /analytics/user-acquisition:
    get:
      tags:
        - Analytics
      summary: Get user acquisition metrics
      description: Returns user acquisition metrics (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          description: Start date (ISO format)
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: End date (ISO format)
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAcquisitionMetrics'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required

  /analytics/claim-metrics:
    get:
      tags:
        - Analytics
      summary: Get claim metrics
      description: Returns claim metrics (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          description: Start date (ISO format)
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: End date (ISO format)
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimMetrics'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin access required

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        address:
          type: string
        phone:
          type: string
        demographics:
          type: object
        preferences:
          type: object
        privacy_settings:
          type: object
        account_tier:
          type: string
          enum: [free, premium]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    UserUpdateInput:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        phone:
          type: string
        demographics:
          type: object
        preferences:
          type: object
        privacy_settings:
          type: object

    Lawsuit:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        case_number:
          type: string
        court:
          type: string
        judge:
          type: string
        settlement_info:
          type: object
          properties:
            total_amount:
              type: number
            tier_structure:
              type: array
              items:
                type: object
                properties:
                  tier:
                    type: string
                  amount:
                    type: number
                  requirements:
                    type: string
        eligibility_criteria:
          type: object
        required_evidence:
          type: array
          items:
            type: string
        important_dates:
          type: object
          properties:
            filing_date:
              type: string
              format: date
            opt_out_deadline:
              type: string
              format: date
            hearing_dates:
              type: array
              items:
                type: string
                format: date
        success_metrics:
          type: object
          properties:
            average_payout:
              type: number
            approval_rate:
              type: number
        source_info:
          type: object
          properties:
            url:
              type: string
            confidence_score:
              type: number
        defendants:
          type: array
          items:
            $ref: '#/components/schemas/Defendant'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    LawsuitInput:
      type: object
      required:
        - name
        - case_number
        - court
      properties:
        name:
          type: string
        case_number:
          type: string
        court:
          type: string
        judge:
          type: string
        settlement_info:
          type: object
        eligibility_criteria:
          type: object
        required_evidence:
          type: array
          items:
            type: string
        important_dates:
          type: object
        success_metrics:
          type: object
        source_info:
          type: object

    Defendant:
      type: object
      properties:
        id:
          type: string
          format: uuid
        lawsuit_id:
          type: string
          format: uuid
        company_name:
          type: string
        company_info:
          type: object
          properties:
            industry:
              type: string
            headquarters:
              type: string
            annual_revenue:
              type: string
            publicly_traded:
              type: boolean
            stock_symbol:
              type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Claim:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        lawsuit_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [draft, submitted, under_review, approved, rejected, completed]
        status_history:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              timestamp:
                type: string
                format: date-time
        documents:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              url:
                type: string
              verification_status:
                type: string
                enum: [pending, verified, rejected]
        eligibility_answers:
          type: object
        estimated_payout_range:
          type: object
          properties:
            min:
              type: number
            max:
              type: number
        priority_score:
          type: number
        communication_history:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              timestamp:
                type: string
                format: date-time
              direction:
                type: string
                enum: [inbound, outbound]
        resolution_details:
          type: object
        lawsuit:
          $ref: '#/components/schemas/Lawsuit'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ClaimInput:
      type: object
      required:
        - lawsuit_id
        - eligibility_answers
      properties:
        lawsuit_id:
          type: string
          format: uuid
        eligibility_answers:
          type: object
        documents:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              url:
                type: string

    ClaimUpdateInput:
      type: object
      properties:
        status:
          type: string
          enum: [draft, submitted, under_review, approved, rejected, completed]
        eligibility_answers:
          type: object
        documents:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              url:
                type: string
              verification_status:
                type: string
                enum: [pending, verified, rejected]

    SavedSearch:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        search_query:
          type: object
          properties:
            query:
              type: string
            location:
              type: string
            category:
              type: string
            minCompensation:
              type: number
            maxCompensation:
              type: number
            deadlineAfter:
              type: string
              format: date
            deadlineBefore:
              type: string
              format: date
        notification_enabled:
          type: boolean
        notification_frequency:
          type: string
          enum: [daily, weekly, monthly]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SavedSearchInput:
      type: object
      required:
        - search_query
      properties:
        search_query:
          type: object
          properties:
            query:
              type: string
            location:
              type: string
            category:
              type: string
            minCompensation:
              type: number
            maxCompensation:
              type: number
            deadlineAfter:
              type: string
              format: date
            deadlineBefore:
              type: string
              format: date
        notification_enabled:
          type: boolean
        notification_frequency:
          type: string
          enum: [daily, weekly, monthly]

    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        type:
          type: string
          enum: [claim_update, deadline, new_lawsuit, system]
        content:
          type: string
        data:
          type: object
        read:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    UserAcquisitionMetrics:
      type: object
      properties:
        totalUsers:
          type: number
        newUsers:
          type: number
        conversionRate:
          type: number
        acquisitionBySource:
          type: object
          additionalProperties:
            type: number
        retentionRate:
          type: number

    ClaimMetrics:
      type: object
      properties:
        totalClaims:
          type: number
        newClaims:
          type: number
        conversionRate:
          type: number
        statusDistribution:
          type: object
          additionalProperties:
            type: number
        averageCompletionTime:
          type: number
        abandonmentRate:
          type: number
        bottlenecks:
          type: array
          items:
            type: object
            properties:
              step:
                type: string
              dropoffRate:
                type: number
